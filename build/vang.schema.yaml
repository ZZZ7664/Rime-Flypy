__build_info:
  rime_version: 1.7.3
  timestamps:
    default: 1627883118
    default.custom: 0
    vang.custom: 0
    vang.schema: 1627882729
custom_phraseVD:
  db_class: stabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  initial_quality: 0
  user_dict: flypy_top
custom_phraseXT:
  db_class: stabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  initial_quality: "-1"
  user_dict: flypy_sys
custom_phraseYH:
  db_class: stabledb
  dictionary: ""
  enable_completion: false
  enable_sentence: false
  initial_quality: "-1"
  user_dict: flypy_user
engine:
  filters:
    - simplifier
    - "simplifier@simplification"
    - uniquifier
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator
    - "lua_translator@date_translator"
    - "lua_translator@time_translator"
    - "table_translator@custom_phraseVD"
    - "table_translator@custom_phraseXT"
    - "table_translator@custom_phraseYH"
    - reverse_lookup_translator
    - "history_translator@historyF"
    - "history_translator@historyI"
    - "lua_translator@calculator_translator"
historyF:
  initial_quality: 1
  input: ";f"
  size: 1
historyI:
  initial_quality: 0
  input: i
  size: 1
key_binder:
  bindings:
    - {accept: "Control+p", send: Up, when: composing}
    - {accept: "Control+n", send: Down, when: composing}
    - {accept: "Control+b", send: Left, when: composing}
    - {accept: "Control+f", send: Right, when: composing}
    - {accept: "Control+a", send: Home, when: composing}
    - {accept: "Control+e", send: End, when: composing}
    - {accept: "Control+d", send: Delete, when: composing}
    - {accept: "Control+k", send: "Shift+Delete", when: composing}
    - {accept: "Control+h", send: BackSpace, when: composing}
    - {accept: "Control+g", send: Escape, when: composing}
    - {accept: "Control+bracketleft", send: Escape, when: composing}
    - {accept: "Alt+v", send: Page_Up, when: composing}
    - {accept: "Control+v", send: Page_Down, when: composing}
    - {accept: ISO_Left_Tab, send: Page_Up, when: composing}
    - {accept: "Shift+Tab", send: Page_Up, when: composing}
    - {accept: Tab, send: Page_Down, when: composing}
    - {accept: minus, send: Page_Up, when: has_menu}
    - {accept: equal, send: Page_Down, when: has_menu}
    - {accept: comma, send: Page_Up, when: paging}
    - {accept: period, send: Page_Down, when: has_menu}
    - {accept: "Control+Shift+1", select: .next, when: always}
    - {accept: "Control+Shift+2", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+3", toggle: full_shape, when: always}
    - {accept: "Control+Shift+4", toggle: simplification, when: always}
    - {accept: "Control+Shift+5", toggle: extended_charset, when: always}
    - {accept: "Control+Shift+exclam", select: .next, when: always}
    - {accept: "Control+Shift+at", toggle: ascii_mode, when: always}
    - {accept: "Control+Shift+numbersign", toggle: full_shape, when: always}
    - {accept: "Control+Shift+dollar", toggle: simplification, when: always}
    - {accept: "Control+Shift+percent", toggle: extended_charset, when: always}
    - {accept: "Shift+space", toggle: full_shape, when: always}
    - {accept: "Control+period", toggle: ascii_punct, when: always}
    - {accept: space, send: space, when: has_menu}
    - {accept: space, send: Escape, when: composing}
    - {accept: Tab, send: Escape, when: composing}
    - {accept: bracketleft, send: Page_Up, when: paging}
    - {accept: bracketright, send: Page_Down, when: has_menu}
    - {accept: semicolon, send: 2, when: has_menu}
    - {accept: comma, send: comma, when: paging}
    - {accept: period, send: period, when: has_menu}
    - {accept: dollar, send: 2, when: composing}
    - {accept: "Release+dollar", send: period, when: composing}
    - {accept: "Release+period", send: period, when: composing}
    - {accept: bar, send: 2, when: composing}
    - {accept: "Release+bar", send: comma, when: composing}
    - {accept: "Release+comma", send: comma, when: composing}
    - {accept: Tab, send: Escape, when: composing}
    - {accept: Caps_Lock, send: Escape, when: composing}
    - {accept: Shift_R, send: Escape, when: composing}
    - {accept: "Shift+space", toggle: full_shape, when: always}
    - {accept: "Control+j", toggle: simplification, when: always}
    - {accept: "Control+period", toggle: ascii_punct, when: always}
    - {accept: "Control+m", select: .next, when: always}
  import_preset: default
menu:
  page_size: 5
punctuator:
  half_shape:
    "!": {commit: "！"}
    "\"": {pair: ["“", "”"]}
    "#": "#"
    "$": {commit: "$"}
    "%": {commit: "%"}
    "&": ["&", ",", ., "?", "!", ":", ";", "'", "\"", "/", "\\", ..., "*", _, "(", ")", "`", "+", "-", "=", "$", "^", "{", "☯", "}", "[", "]", "<", ">", "~", "|"]
    "'": {pair: ["‘", "’"]}
    "(": "（"
    ")": "）"
    "*": {commit: "*"}
    "+": "+"
    ",": {commit: "，"}
    "-": "-"
    .: {commit: "。"}
    "/": {commit: "、"}
    9: [9, "音形yxk", "截至jva", "觉得jdi", "简洁jjd", "精力jlv", "梳理ulw", "事实uub", "事实上uuu", "基于jya", "置顶vdd", "想想xxm", "智viud", "计jiyd", "事物uw", "而是eu", "十步uibu", "是不uibu"]
    ":": {commit: "："}
    ";": {commit: "；"}
    "<": {commit: "《"}
    "=": "="
    ">": {commit: "》"}
    "?": {commit: "？"}
    "@": ["@", "@qq.com", "@163.com", "@126.com", "@yeah.net", "@139.com", "@sohu.com", "@vip.qq.com", "@gmail.com", "@huawei.com", "@yahoo.com.cn", "@sina.com", "@hotmail.com"]
    "[": {commit: "【"}
    "\\": {commit: "、"}
    "]": {commit: "】"}
    "^": {commit: "……"}
    _: "——"
    "`": "`"
    "{": {commit: "｛"}
    "|": ["·", "|", "｜", "§", "¦"]
    "}": {commit: "｝"}
    "~": {commit: "～"}
recognizer:
  import_preset: default
  patterns:
    expression: "^=.*$"
    punct: ""
    reverse_lookup: "[a-z`]*`+[a-z`]*"
    uppercase: ""
reverse_lookup:
  comment_format:
    - "xform/ / /"
  dictionary: flypydz
schema:
  author:
    - "方案设计：何海峰 <flypy@qq.com>"
  dependencies:
    - flypydz
  description: |
    小鹤音形
    
  name: "助记专用"
  schema_id: vang
  version: 10.7.3
simplification:
  opencc_config: s2tw.json
  option_name: simplification
  tips: all
speller:
  alphabet: "/;zyxwvutsrqponmlkjihgfedcba"
  auto_clear: max_length
  auto_select: true
  auto_select_pattern: "^;.$|^\\w{4}$"
  finals: "/"
  initials: "abcdefghijklmnopqrstuvwxyz;"
  max_code_length: 4
style:
  horizontal: true
switches:
  - options: [_keyboard_menu]
    states: ["   ☰"]
  - name: ascii_mode
    reset: 0
  - name: _hide_candidate
    reset: 0
  - options: [_key_JSY]
  - options: [_keyboard_default, _keyboard_defaultVJ]
    states: ["助记", "返回"]
  - options: ["_key_#"]
    states: ["  ⌗  "]
  - options: [_key_paste]
    states: ["  ⊙  "]
  - options: ["_key_;f"]
    states: ["  ◎  "]
  - options: ["_key_;"]
  - options: [_key_ClearA]
    states: ["  卐  "]
  - options: [_key_Hide]
    states: ["⎋"]
translator:
  dictionary: flypy
  disable_user_dict_for_patterns:
    - "^z.*$"
  enable_charset_filter: false
  enable_completion: false
  enable_sentence: false
  enable_user_dict: false